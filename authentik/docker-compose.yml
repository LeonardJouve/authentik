---

services:
    postgresql:
        image: docker.io/library/postgres:16-alpine
        container_name: authentik-postgres
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
            start_period: 20s
            interval: 30s
            retries: 5
            timeout: 5s
        volumes:
            - database:/var/lib/postgresql/data
        environment:
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_DB=${POSTGRES_DB}
        restart: unless-stopped
    redis:
        image: docker.io/library/redis:alpine
        container_name: authentik-redis
        command: --save 60 1 --loglevel warning
        healthcheck:
            test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
            start_period: 20s
            interval: 30s
            retries: 5
            timeout: 3s
        volumes:
            - redis:/data
        restart: unless-stopped
    server:
        image: ghcr.io/goauthentik/server:2025.6.1
        container_name: authentik-server
        command: server
        environment:
            - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY}
            - AUTHENTIK_REDIS__HOST=redis
            - AUTHENTIK_POSTGRESQL__HOST=postgresql
            - AUTHENTIK_POSTGRESQL__USER=${POSTGRES_USER}
            - AUTHENTIK_POSTGRESQL__NAME=${POSTGRES_DB}
            - AUTHENTIK_POSTGRESQL__PASSWORD=${POSTGRES_PASSWORD}
            - AUTHENTIK_DISABLE_STARTUP_ANALYTICS=true
            - AUTHENTIK_ERROR_REPORTING__ENABLED=false
            - AUTHENTIK_BOOTSTRAP_PASSWORD=${AUTHENTIK_BOOTSTRAP_PASSWORD}
            - AUTHENTIK_BOOTSTRAP_EMAIL=${AUTHENTIK_BOOTSTRAP_EMAIL}
            - AUTHENTIK_BOOTSTRAP_TOKEN=${AUTHENTIK_BOOTSTRAP_TOKEN}
        volumes:
            - media:/media
            - custom-templates:/templates
        ports:
            - "${AUTHENTIK_HTTP_PORT}:9000"
        depends_on:
            postgresql:
                condition: service_healthy
            redis:
                condition: service_healthy
        restart: unless-stopped
    worker:
        image: ghcr.io/goauthentik/server:2025.6.1
        container_name: authentik-worker
        command: worker
        environment:
            - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY}
            - AUTHENTIK_REDIS__HOST=redis
            - AUTHENTIK_POSTGRESQL__HOST=postgresql
            - AUTHENTIK_POSTGRESQL__USER=${POSTGRES_USER}
            - AUTHENTIK_POSTGRESQL__NAME=${POSTGRES_DB}
            - AUTHENTIK_POSTGRESQL__PASSWORD=${POSTGRES_PASSWORD}
            - AUTHENTIK_DISABLE_STARTUP_ANALYTICS=true
            - AUTHENTIK_ERROR_REPORTING__ENABLED=false
        # `user: root` and the docker socket volume are optional.
        # See more for the docker socket integration here:
        # https://goauthentik.io/docs/outposts/integrations/docker
        # Removing `user: root` also prevents the worker from fixing the permissions
        # on the mounted folders, so when removing this make sure the folders have the correct UID/GID
        # (1000:1000 by default)
        # user: root
        volumes:
            - ${XDG_RUNTIME_DIR}/podman/podman.sock:/var/run/docker.sock
            - media:/media
            - certs:/certs
            - custom-templates:/templates
        depends_on:
            postgresql:
                condition: service_healthy
            redis:
                condition: service_healthy
        restart: unless-stopped

volumes:
    database: {}
    redis: {}
    media: {}
    certs: {}
    custom-templates: {}
